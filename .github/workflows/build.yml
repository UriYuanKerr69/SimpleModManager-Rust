name: Build and Create Artifacts

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_artifacts:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        rust-version: [nightly]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        override: true
        target: |
          ${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-msvc' || matrix.os == 'ubuntu-20.04' && 'x86_64-unknown-linux-gnu' || 'aarch64-apple-darwin, x86_64-apple-darwin' }}

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-msvc' || matrix.os == 'ubuntu-20.04' && 'x86_64-unknown-linux-gnu' || runner.arch == 'arm64' && 'aarch64-apple-darwin' || 'x86_64-apple-darwin' }}

    - name: Create Artifact
      run: echo "Creating artifact for ${{ matrix.os }}"
      shell: bash

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-binaries
        path: |
          target/${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-msvc/release' || matrix.os == 'ubuntu-20.04' && 'x86_64-unknown-linux-gnu/release' || runner.arch == 'arm64' && 'aarch64-apple-darwin/release' || 'x86_64-apple-darwin/release' }}/SimpleModManager-Rust*
