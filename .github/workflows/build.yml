name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 5
    strategy:
      fail-fast: false # Don't fail other jobs if one fails
      matrix:
        os_target:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          - { os: windows-latest, target: x86_64-pc-windows-gnu }
          - { os: macos-latest, target: x86_64-apple-darwin }
    runs-on: ${{ matrix.os_target.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        target: ${{ matrix.os_target.target }}

    - name: Build
      id: build_step
      run: |
        if cargo build --release --target ${{ matrix.os_target.target }}; then
          echo "build_success=true" >> $GITHUB_OUTPUT
        else
          echo "build_success=false" >> $GITHUB_OUTPUT
        fi
      if: matrix.os_target.os != 'windows-latest'

    - name: Build for Windows
      id: build_step
      run: |
        if (cargo build --release --target ${{ matrix.os_target.target }}) {
          echo "build_success=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        } else {
          echo "build_success=false" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        }
      shell: pwsh
      if: matrix.os_target.os == 'windows-latest'

    - name: Upload Artifact
      if: steps.build_step.outputs.build_success == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os_target.target }}-binaries
        path: target/${{ matrix.os_target.target }}/release/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
    steps:
    - name: Check if all builds succeeded
      id: check_builds
      run: |
        all_success=true
        for os in ${{ toJSON(matrix.os_target.*.os) }}; do
          build_success=${{ needs.build.outputs['build_step_'${os}'.build_success'] }}
          if [ "$build_success" != "true" ]; then
            echo "Build for ${os} failed"
            all_success=false
            break
          fi
        done
        if [ "$all_success" = "true" ]; then
          echo "all_builds_succeeded=true" >> $GITHUB_OUTPUT
        else
          echo "all_builds_succeeded=false" >> $GITHUB_OUTPUT
        fi

    - name: Download Artifacts
      if: steps.check_builds.outputs.all_builds_succeeded == 'true'
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Release
      if: steps.check_builds.outputs.all_builds_succeeded == 'true' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
