name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 5
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        target:
          - { triple: x86_64-unknown-linux-gnu, os: ubuntu-latest }
          - { triple: x86_64-pc-windows-gnu, os: windows-latest }
          - { triple: x86_64-apple-darwin, os: macos-latest }
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        target: ${{ matrix.target.triple }}

    - name: Build for Linux and macOS
      if: runner.os != 'Windows'
      id: build_step_unix
      run: |
        if cargo build --release --target ${{ matrix.target.triple }}; then
          echo "build_success=true" >> $GITHUB_OUTPUT
        else
          echo "build_success=false" >> $GITHUB_OUTPUT
        fi

    - name: Build for Windows
      if: runner.os == 'Windows'
      id: build_step_windows
      run: |
        if (cargo build --release --target ${{ matrix.target.triple }}) {
          echo "build_success=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        } else {
          echo "build_success=false" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        }
      shell: pwsh

    - name: Upload Artifact
      if: steps.build_step_unix.outputs.build_success == 'true' || steps.build_step_windows.outputs.build_success == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.target.triple }}-binaries
        path: target/${{ matrix.target.triple }}/release/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
    steps:
    - name: Check if all builds succeeded
      id: check_builds
      run: |
        unix_success=${{ needs.build.outputs.build_step_unix_ubuntu-latest.build_success }}
        windows_success=${{ needs.build.outputs.build_step_windows_windows-latest.build_success }}
        macos_success=${{ needs.build.outputs.build_step_unix_macos-latest.build_success }}
        
        if [ "$unix_success" = "true" ] && [ "$windows_success" = "true" ] && [ "$macos_success" = "true" ]; then
          echo "all_builds_succeeded=true" >> $GITHUB_OUTPUT
        else
          echo "all_builds_succeeded=false" >> $GITHUB_OUTPUT
        fi

    - name: Download Artifacts
      if: steps.check_builds.outputs.all_builds_succeeded == 'true'
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Release
      if: steps.check_builds.outputs.all_builds_succeeded == 'true' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
